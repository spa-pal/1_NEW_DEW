<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\exe\FAT30_1.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\exe\FAT30_1.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, RVCT4.0 [Build 728]: Last Updated: Wed Sep 22 19:04:49 2010
<BR><P>
<H3>Maximum Stack Usage =         84 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
CAN_IRQHandler &rArr; can_isr_rx1 &rArr; can_in_an &rArr; can1_out
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[ef25e0]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[ef25e0]">NMI_Handler</a><BR>
 <LI><a href="#[ef25a4]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[ef25a4]">HardFault_Handler</a><BR>
 <LI><a href="#[ef2568]">MemManage_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[ef2568]">MemManage_Handler</a><BR>
 <LI><a href="#[ef252c]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[ef252c]">BusFault_Handler</a><BR>
 <LI><a href="#[ef24f0]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[ef24f0]">UsageFault_Handler</a><BR>
 <LI><a href="#[ef24b4]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[ef24b4]">SVC_Handler</a><BR>
 <LI><a href="#[ef2478]">DebugMon_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[ef2478]">DebugMon_Handler</a><BR>
 <LI><a href="#[ef243c]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[ef243c]">PendSV_Handler</a><BR>
 <LI><a href="#[ef23c4]">ADC_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[ef23c4]">ADC_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[ef261c]">Reset_Handler</a>
 <LI><a href="#[ef25e0]">NMI_Handler</a>
 <LI><a href="#[ef25a4]">HardFault_Handler</a>
 <LI><a href="#[ef2568]">MemManage_Handler</a>
 <LI><a href="#[ef252c]">BusFault_Handler</a>
 <LI><a href="#[ef24f0]">UsageFault_Handler</a>
 <LI><a href="#[ef24b4]">SVC_Handler</a>
 <LI><a href="#[ef2478]">DebugMon_Handler</a>
 <LI><a href="#[ef243c]">PendSV_Handler</a>
 <LI><a href="#[eef4e4]">SysTick_Handler</a>
 <LI><a href="#[ef1c44]">WDT_IRQHandler</a>
 <LI><a href="#[ef1e60]">TIMER0_IRQHandler</a>
 <LI><a href="#[ef1e24]">TIMER1_IRQHandler</a>
 <LI><a href="#[ef1de8]">TIMER2_IRQHandler</a>
 <LI><a href="#[ef1dac]">TIMER3_IRQHandler</a>
 <LI><a href="#[eecfa0]">UART0_IRQHandler</a>
 <LI><a href="#[ef1d34]">UART1_IRQHandler</a>
 <LI><a href="#[ef1cf8]">UART2_IRQHandler</a>
 <LI><a href="#[ef1cbc]">UART3_IRQHandler</a>
 <LI><a href="#[ef2004]">PWM1_IRQHandler</a>
 <LI><a href="#[ef21a8]">I2C0_IRQHandler</a>
 <LI><a href="#[ef216c]">I2C1_IRQHandler</a>
 <LI><a href="#[ef2130]">I2C2_IRQHandler</a>
 <LI><a href="#[ef1f14]">SPI_IRQHandler</a>
 <LI><a href="#[ef1ed8]">SSP0_IRQHandler</a>
 <LI><a href="#[ef1e9c]">SSP1_IRQHandler</a>
 <LI><a href="#[ef207c]">PLL0_IRQHandler</a>
 <LI><a href="#[ef1f50]">RTC_IRQHandler</a>
 <LI><a href="#[ef22d4]">EINT0_IRQHandler</a>
 <LI><a href="#[ef2298]">EINT1_IRQHandler</a>
 <LI><a href="#[ef225c]">EINT2_IRQHandler</a>
 <LI><a href="#[ef2220]">EINT3_IRQHandler</a>
 <LI><a href="#[ef23c4]">ADC_IRQHandler</a>
 <LI><a href="#[ef2388]">BOD_IRQHandler</a>
 <LI><a href="#[ef1c80]">USB_IRQHandler</a>
 <LI><a href="#[eeb434]">CAN_IRQHandler</a>
 <LI><a href="#[ef2310]">DMA_IRQHandler</a>
 <LI><a href="#[ef20f4]">I2S_IRQHandler</a>
 <LI><a href="#[ef21e4]">ENET_IRQHandler</a>
 <LI><a href="#[ef1f8c]">RIT_IRQHandler</a>
 <LI><a href="#[ef20b8]">MCPWM_IRQHandler</a>
 <LI><a href="#[ef1fc8]">QEI_IRQHandler</a>
 <LI><a href="#[ef2040]">PLL1_IRQHandler</a>
 <LI><a href="#[eef4a8]">main</a>
 <LI><a href="#[eeb308]">__main</a>
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[eeb308]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(.text)
</UL>
<P><STRONG><a name="[eeacf0]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))
<BR><BR>[Calls]<UL><LI><a href="#[ef252c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>

<P><STRONG><a name="[eeabc4]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[eea96c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[eeab88]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[eea96c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[eeaa98]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7.o(.ARM.Collect$$$$00000007))

<P><STRONG><a name="[ef261c]"></a>Reset_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[ef25e0]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[ef25e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[ef25e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[ef25a4]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[ef25a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[ef25a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[ef2568]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[ef2568]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[ef2568]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[ef252c]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[ef252c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[eeacf0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_stk
<LI><a href="#[ef252c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[ef24f0]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[ef24f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[ef24f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[ef24b4]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[ef24b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[ef24b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[ef2478]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[ef2478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[ef2478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[ef243c]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[ef243c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[ef243c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[ef23c4]"></a>ADC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[ef23c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[ef23c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[ef2388]"></a>BOD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[ef2310]"></a>DMA_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[ef22d4]"></a>EINT0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[ef2298]"></a>EINT1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[ef225c]"></a>EINT2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[ef2220]"></a>EINT3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[ef21e4]"></a>ENET_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[ef21a8]"></a>I2C0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[ef216c]"></a>I2C1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[ef2130]"></a>I2C2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[ef20f4]"></a>I2S_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[ef20b8]"></a>MCPWM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[ef207c]"></a>PLL0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[ef2040]"></a>PLL1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[ef2004]"></a>PWM1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[ef1fc8]"></a>QEI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[ef1f8c]"></a>RIT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[ef1f50]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[ef1f14]"></a>SPI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[ef1ed8]"></a>SSP0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[ef1e9c]"></a>SSP1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[ef1e60]"></a>TIMER0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[ef1e24]"></a>TIMER1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[ef1de8]"></a>TIMER2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[ef1dac]"></a>TIMER3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[ef1d34]"></a>UART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[ef1cf8]"></a>UART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[ef1cbc]"></a>UART3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[ef1c80]"></a>USB_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[ef1c44]"></a>WDT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[ef11f4]"></a>SystemInit</STRONG> (Thumb, 458 bytes, Stack size 0 bytes, system_lpc17xx.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[eef4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[eef700]"></a>matemath</STRONG> (Thumb, 96 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[eef4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[eef6c4]"></a>adc_drv</STRONG> (Thumb, 328 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = adc_drv
</UL>
<BR>[Called By]<UL><LI><a href="#[eef4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[eef688]"></a>vent_drv</STRONG> (Thumb, 122 bytes, Stack size 32 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = vent_drv
</UL>
<BR>[Calls]<UL><LI><a href="#[eeaffc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[eef340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gran
</UL>
<BR>[Called By]<UL><LI><a href="#[eef4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[eef64c]"></a>net_drv</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = net_drv
</UL>
<BR>[Calls]<UL><LI><a href="#[eef340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gran
</UL>
<BR>[Called By]<UL><LI><a href="#[eef4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[eef610]"></a>power_hndl</STRONG> (Thumb, 160 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = power_hndl
</UL>
<BR>[Calls]<UL><LI><a href="#[eef340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gran
</UL>
<BR>[Called By]<UL><LI><a href="#[eef4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[eef5d4]"></a>rele_drv</STRONG> (Thumb, 90 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[eef4e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[eef598]"></a>rele_hndl</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[eef4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[eef55c]"></a>rtc_init</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[eef4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[eef520]"></a>pwm_init</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[eef4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[eef4e4]"></a>SysTick_Handler</STRONG> (Thumb, 412 bytes, Stack size 4 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = SysTick_Handler
</UL>
<BR>[Calls]<UL><LI><a href="#[eef5d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rele_drv
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[eef4a8]"></a>main</STRONG> (Thumb, 278 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = main &rArr; uart_in0 &rArr; control_check0
</UL>
<BR>[Calls]<UL><LI><a href="#[eef304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_in0
<LI><a href="#[eef37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;can1_init
<LI><a href="#[eef430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTInit
<LI><a href="#[eef46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FullCAN_SetFilter
<LI><a href="#[eef520]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_init
<LI><a href="#[eef55c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_init
<LI><a href="#[eef598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rele_hndl
<LI><a href="#[eef610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_hndl
<LI><a href="#[eef64c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;net_drv
<LI><a href="#[eef688]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vent_drv
<LI><a href="#[eef6c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_drv
<LI><a href="#[eef700]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;matemath
<LI><a href="#[ef11f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry7.o(.ARM.Collect$$$$00000007)
</UL>
<P><STRONG><a name="[eeea1c]"></a>gran_char</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, gran.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[eeb4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;can_in_an
</UL>

<P><STRONG><a name="[eef340]"></a>gran</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, gran.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[eef610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_hndl
<LI><a href="#[eef64c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;net_drv
<LI><a href="#[eef688]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vent_drv
</UL>

<P><STRONG><a name="[eef430]"></a>UARTInit</STRONG> (Thumb, 282 bytes, Stack size 24 bytes, uart0.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = UARTInit
</UL>
<BR>[Calls]<UL><LI><a href="#[eed9f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[eef4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[eecfa0]"></a>UART0_IRQHandler</STRONG> (Thumb, 298 bytes, Stack size 12 bytes, uart0.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = UART0_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[eecf64]"></a>uart_in_an0</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, uart0.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[eef304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_in0
</UL>

<P><STRONG><a name="[eecf28]"></a>index_offset0</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, uart0.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[eeceec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;control_check0
<LI><a href="#[eef304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_in0
</UL>

<P><STRONG><a name="[eeceec]"></a>control_check0</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, uart0.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = control_check0
</UL>
<BR>[Calls]<UL><LI><a href="#[eecf28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;index_offset0
</UL>
<BR>[Called By]<UL><LI><a href="#[eef304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_in0
</UL>

<P><STRONG><a name="[eef304]"></a>uart_in0</STRONG> (Thumb, 172 bytes, Stack size 16 bytes, uart0.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = uart_in0 &rArr; control_check0
</UL>
<BR>[Calls]<UL><LI><a href="#[eeceec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;control_check0
<LI><a href="#[eecf28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;index_offset0
<LI><a href="#[eecf64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_in_an0
</UL>
<BR>[Called By]<UL><LI><a href="#[eef4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[eeb59c]"></a>can1_out</STRONG> (Thumb, 406 bytes, Stack size 28 bytes, full_can.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = can1_out
</UL>
<BR>[Called By]<UL><LI><a href="#[eeb4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;can_in_an
</UL>

<P><STRONG><a name="[eeb4e8]"></a>can_in_an</STRONG> (Thumb, 212 bytes, Stack size 24 bytes, full_can.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = can_in_an &rArr; can1_out
</UL>
<BR>[Calls]<UL><LI><a href="#[eeb59c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;can1_out
<LI><a href="#[eeea1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gran_char
</UL>
<BR>[Called By]<UL><LI><a href="#[eeb470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;can_isr_rx1
</UL>

<P><STRONG><a name="[eeb4ac]"></a>can_isr_tx1</STRONG> (Thumb, 130 bytes, Stack size 0 bytes, full_can.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[eeb434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN_IRQHandler
</UL>

<P><STRONG><a name="[eef37c]"></a>can1_init</STRONG> (Thumb, 122 bytes, Stack size 0 bytes, full_can.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[eef4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[eef46c]"></a>FullCAN_SetFilter</STRONG> (Thumb, 284 bytes, Stack size 32 bytes, full_can.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = FullCAN_SetFilter
</UL>
<BR>[Called By]<UL><LI><a href="#[eef4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[eeb470]"></a>can_isr_rx1</STRONG> (Thumb, 126 bytes, Stack size 24 bytes, full_can.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = can_isr_rx1 &rArr; can_in_an &rArr; can1_out
</UL>
<BR>[Calls]<UL><LI><a href="#[eeb4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;can_in_an
</UL>
<BR>[Called By]<UL><LI><a href="#[eeb434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN_IRQHandler
</UL>

<P><STRONG><a name="[eeb434]"></a>CAN_IRQHandler</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, full_can.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = CAN_IRQHandler &rArr; can_isr_rx1 &rArr; can_in_an &rArr; can1_out
</UL>
<BR>[Calls]<UL><LI><a href="#[eeb470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;can_isr_rx1
<LI><a href="#[eeb4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;can_isr_tx1
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[eeb038]"></a>__aeabi_memcpy</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[eeaffc]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[eef688]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vent_drv
</UL>

<P><STRONG><a name="[eeafc0]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[eea96c]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[eeab88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[eeabc4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[eea930]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[eea570]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[eea534]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[eea4f8]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[eed9f0]"></a>NVIC_EnableIRQ</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, uart0.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[eef430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTInit
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
