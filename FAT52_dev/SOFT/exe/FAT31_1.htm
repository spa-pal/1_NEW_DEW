<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\exe\FAT31_1.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\exe\FAT31_1.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, RVCT4.0 [Build 728]: Last Updated: Fri Dec 24 11:38:15 2010
<BR><P>
<H3>Maximum Stack Usage =        184 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; read_summary_power &rArr; uart_out_adr1
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[d825e0]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[d825e0]">NMI_Handler</a><BR>
 <LI><a href="#[d825a4]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[d825a4]">HardFault_Handler</a><BR>
 <LI><a href="#[d82568]">MemManage_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[d82568]">MemManage_Handler</a><BR>
 <LI><a href="#[d8252c]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[d8252c]">BusFault_Handler</a><BR>
 <LI><a href="#[d824f0]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[d824f0]">UsageFault_Handler</a><BR>
 <LI><a href="#[d824b4]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[d824b4]">SVC_Handler</a><BR>
 <LI><a href="#[d82478]">DebugMon_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[d82478]">DebugMon_Handler</a><BR>
 <LI><a href="#[d8243c]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[d8243c]">PendSV_Handler</a><BR>
 <LI><a href="#[d823c4]">ADC_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[d823c4]">ADC_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[d8261c]">Reset_Handler</a>
 <LI><a href="#[d825e0]">NMI_Handler</a>
 <LI><a href="#[d825a4]">HardFault_Handler</a>
 <LI><a href="#[d82568]">MemManage_Handler</a>
 <LI><a href="#[d8252c]">BusFault_Handler</a>
 <LI><a href="#[d824f0]">UsageFault_Handler</a>
 <LI><a href="#[d824b4]">SVC_Handler</a>
 <LI><a href="#[d82478]">DebugMon_Handler</a>
 <LI><a href="#[d8243c]">PendSV_Handler</a>
 <LI><a href="#[d7f28c]">SysTick_Handler</a>
 <LI><a href="#[d81c44]">WDT_IRQHandler</a>
 <LI><a href="#[d81e60]">TIMER0_IRQHandler</a>
 <LI><a href="#[d81e24]">TIMER1_IRQHandler</a>
 <LI><a href="#[d81de8]">TIMER2_IRQHandler</a>
 <LI><a href="#[d81dac]">TIMER3_IRQHandler</a>
 <LI><a href="#[d7cdfc]">UART0_IRQHandler</a>
 <LI><a href="#[d7a660]">UART1_IRQHandler</a>
 <LI><a href="#[d81cf8]">UART2_IRQHandler</a>
 <LI><a href="#[d81cbc]">UART3_IRQHandler</a>
 <LI><a href="#[d82004]">PWM1_IRQHandler</a>
 <LI><a href="#[d821a8]">I2C0_IRQHandler</a>
 <LI><a href="#[d8216c]">I2C1_IRQHandler</a>
 <LI><a href="#[d82130]">I2C2_IRQHandler</a>
 <LI><a href="#[d81f14]">SPI_IRQHandler</a>
 <LI><a href="#[d81ed8]">SSP0_IRQHandler</a>
 <LI><a href="#[d81e9c]">SSP1_IRQHandler</a>
 <LI><a href="#[d8207c]">PLL0_IRQHandler</a>
 <LI><a href="#[d81f50]">RTC_IRQHandler</a>
 <LI><a href="#[d822d4]">EINT0_IRQHandler</a>
 <LI><a href="#[d82298]">EINT1_IRQHandler</a>
 <LI><a href="#[d8225c]">EINT2_IRQHandler</a>
 <LI><a href="#[d82220]">EINT3_IRQHandler</a>
 <LI><a href="#[d823c4]">ADC_IRQHandler</a>
 <LI><a href="#[d82388]">BOD_IRQHandler</a>
 <LI><a href="#[d81c80]">USB_IRQHandler</a>
 <LI><a href="#[d7b0ec]">CAN_IRQHandler</a>
 <LI><a href="#[d82310]">DMA_IRQHandler</a>
 <LI><a href="#[d820f4]">I2S_IRQHandler</a>
 <LI><a href="#[d821e4]">ENET_IRQHandler</a>
 <LI><a href="#[d81f8c]">RIT_IRQHandler</a>
 <LI><a href="#[d820b8]">MCPWM_IRQHandler</a>
 <LI><a href="#[d81fc8]">QEI_IRQHandler</a>
 <LI><a href="#[d82040]">PLL1_IRQHandler</a>
 <LI><a href="#[d7f250]">main</a>
 <LI><a href="#[d7a444]">__main</a>
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[d7a444]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(.text)
</UL>
<P><STRONG><a name="[d79e2c]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))
<BR><BR>[Calls]<UL><LI><a href="#[d8252c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>

<P><STRONG><a name="[d79d00]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[d79aa8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[d79cc4]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[d79aa8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[d79bd4]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7.o(.ARM.Collect$$$$00000007))

<P><STRONG><a name="[d8261c]"></a>Reset_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[d825e0]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d825e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[d825e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[d825a4]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d825a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[d825a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[d82568]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d82568]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[d82568]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[d8252c]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d8252c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[d79e2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_stk
<LI><a href="#[d8252c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[d824f0]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d824f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[d824f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[d824b4]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d824b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[d824b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[d82478]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d82478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[d82478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[d8243c]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d8243c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[d8243c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[d823c4]"></a>ADC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d823c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[d823c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[d82388]"></a>BOD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[d82310]"></a>DMA_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[d822d4]"></a>EINT0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[d82298]"></a>EINT1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[d8225c]"></a>EINT2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[d82220]"></a>EINT3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[d821e4]"></a>ENET_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[d821a8]"></a>I2C0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[d8216c]"></a>I2C1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[d82130]"></a>I2C2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[d820f4]"></a>I2S_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[d820b8]"></a>MCPWM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[d8207c]"></a>PLL0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[d82040]"></a>PLL1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[d82004]"></a>PWM1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[d81fc8]"></a>QEI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[d81f8c]"></a>RIT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[d81f50]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[d81f14]"></a>SPI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[d81ed8]"></a>SSP0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[d81e9c]"></a>SSP1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[d81e60]"></a>TIMER0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[d81e24]"></a>TIMER1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[d81de8]"></a>TIMER2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[d81dac]"></a>TIMER3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[d81cf8]"></a>UART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[d81cbc]"></a>UART3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[d81c80]"></a>USB_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[d81c44]"></a>WDT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[d811f4]"></a>SystemInit</STRONG> (Thumb, 458 bytes, Stack size 0 bytes, system_lpc17xx.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d7f250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[d7f4a8]"></a>matemath</STRONG> (Thumb, 96 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d7f250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[d7f46c]"></a>adc_drv</STRONG> (Thumb, 328 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = adc_drv
</UL>
<BR>[Called By]<UL><LI><a href="#[d7f250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[d7f430]"></a>vent_drv</STRONG> (Thumb, 136 bytes, Stack size 48 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = vent_drv
</UL>
<BR>[Calls]<UL><LI><a href="#[d7a138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[d7f0ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gran_char
<LI><a href="#[d7f0e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gran
</UL>
<BR>[Called By]<UL><LI><a href="#[d7f250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[d7f3f4]"></a>net_drv</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = net_drv
</UL>
<BR>[Calls]<UL><LI><a href="#[d7f0e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gran
</UL>
<BR>[Called By]<UL><LI><a href="#[d7f250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[d7f3b8]"></a>power_hndl</STRONG> (Thumb, 160 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = power_hndl
</UL>
<BR>[Calls]<UL><LI><a href="#[d7f0e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gran
</UL>
<BR>[Called By]<UL><LI><a href="#[d7f250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[d7f37c]"></a>rele_drv</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d7f28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[d7f340]"></a>rele_hndl</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d7f250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[d7f304]"></a>rtc_init</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d7f250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[d7f2c8]"></a>pwm_init</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d7f250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[d7f28c]"></a>SysTick_Handler</STRONG> (Thumb, 446 bytes, Stack size 4 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = SysTick_Handler
</UL>
<BR>[Calls]<UL><LI><a href="#[d7f37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rele_drv
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[d7f250]"></a>main</STRONG> (Thumb, 472 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = main &rArr; read_summary_power &rArr; uart_out_adr1
</UL>
<BR>[Calls]<UL><LI><a href="#[d7ef44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_in0
<LI><a href="#[d7eff8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sleep_an
<LI><a href="#[d7f034]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_summary_power
<LI><a href="#[d7f070]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_current_power
<LI><a href="#[d7f124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;can1_init
<LI><a href="#[d7f1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTInit
<LI><a href="#[d7f214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FullCAN_SetFilter
<LI><a href="#[d7f2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_init
<LI><a href="#[d7f304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_init
<LI><a href="#[d7f340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rele_hndl
<LI><a href="#[d7f3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_hndl
<LI><a href="#[d7f3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;net_drv
<LI><a href="#[d7f430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vent_drv
<LI><a href="#[d7f46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_drv
<LI><a href="#[d7f4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;matemath
<LI><a href="#[d811f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry7.o(.ARM.Collect$$$$00000007)
</UL>
<P><STRONG><a name="[d7f0ac]"></a>gran_char</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, gran.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d7a660]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_IRQHandler
<LI><a href="#[d7f430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vent_drv
</UL>

<P><STRONG><a name="[d7f0e8]"></a>gran</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, gran.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d7f3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_hndl
<LI><a href="#[d7f3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;net_drv
<LI><a href="#[d7f430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vent_drv
</UL>

<P><STRONG><a name="[d7cdfc]"></a>UART0_IRQHandler</STRONG> (Thumb, 288 bytes, Stack size 12 bytes, uart0.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = UART0_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[d7cc1c]"></a>uart_in_an0</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, uart0.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d7ef44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_in0
</UL>

<P><STRONG><a name="[d7cbe0]"></a>index_offset0</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, uart0.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d7cba4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;control_check0
<LI><a href="#[d7ef44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_in0
</UL>

<P><STRONG><a name="[d7cba4]"></a>control_check0</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, uart0.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = control_check0
</UL>
<BR>[Calls]<UL><LI><a href="#[d7cbe0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;index_offset0
</UL>
<BR>[Called By]<UL><LI><a href="#[d7ef44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_in0
</UL>

<P><STRONG><a name="[d7ef44]"></a>uart_in0</STRONG> (Thumb, 172 bytes, Stack size 16 bytes, uart0.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = uart_in0 &rArr; control_check0
</UL>
<BR>[Calls]<UL><LI><a href="#[d7cba4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;control_check0
<LI><a href="#[d7cbe0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;index_offset0
<LI><a href="#[d7cc1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_in_an0
</UL>
<BR>[Called By]<UL><LI><a href="#[d7f250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[d7b254]"></a>can1_out</STRONG> (Thumb, 406 bytes, Stack size 28 bytes, full_can.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = can1_out
</UL>
<BR>[Called By]<UL><LI><a href="#[d7b1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;can_in_an
</UL>

<P><STRONG><a name="[d7b1a0]"></a>can_in_an</STRONG> (Thumb, 218 bytes, Stack size 20 bytes, full_can.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = can_in_an &rArr; can1_out
</UL>
<BR>[Calls]<UL><LI><a href="#[d7b254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;can1_out
</UL>
<BR>[Called By]<UL><LI><a href="#[d7b128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;can_isr_rx1
</UL>

<P><STRONG><a name="[d7b164]"></a>can_isr_tx1</STRONG> (Thumb, 130 bytes, Stack size 0 bytes, full_can.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d7b0ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN_IRQHandler
</UL>

<P><STRONG><a name="[d7f124]"></a>can1_init</STRONG> (Thumb, 122 bytes, Stack size 0 bytes, full_can.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d7f250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[d7f214]"></a>FullCAN_SetFilter</STRONG> (Thumb, 284 bytes, Stack size 32 bytes, full_can.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = FullCAN_SetFilter
</UL>
<BR>[Called By]<UL><LI><a href="#[d7f250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[d7b128]"></a>can_isr_rx1</STRONG> (Thumb, 122 bytes, Stack size 20 bytes, full_can.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = can_isr_rx1 &rArr; can_in_an &rArr; can1_out
</UL>
<BR>[Calls]<UL><LI><a href="#[d7b1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;can_in_an
</UL>
<BR>[Called By]<UL><LI><a href="#[d7b0ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN_IRQHandler
</UL>

<P><STRONG><a name="[d7b0ec]"></a>CAN_IRQHandler</STRONG> (Thumb, 40 bytes, Stack size 4 bytes, full_can.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = CAN_IRQHandler &rArr; can_isr_rx1 &rArr; can_in_an &rArr; can1_out
</UL>
<BR>[Calls]<UL><LI><a href="#[d7b128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;can_isr_rx1
<LI><a href="#[d7b164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;can_isr_tx1
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[d7f1d8]"></a>UARTInit</STRONG> (Thumb, 288 bytes, Stack size 24 bytes, power_cnt.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = UARTInit
</UL>
<BR>[Calls]<UL><LI><a href="#[d7ad2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[d7f250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[d7a660]"></a>UART1_IRQHandler</STRONG> (Thumb, 340 bytes, Stack size 24 bytes, power_cnt.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = UART1_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[d7f0ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gran_char
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[d7a624]"></a>power_cnt_crc</STRONG> (Thumb, 28 bytes, Stack size 12 bytes, power_cnt.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = power_cnt_crc
</UL>
<BR>[Called By]<UL><LI><a href="#[d7eff8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sleep_an
<LI><a href="#[d7f034]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_summary_power
<LI><a href="#[d7f070]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_current_power
</UL>

<P><STRONG><a name="[d7a5e8]"></a>putchar1</STRONG> (Thumb, 78 bytes, Stack size 0 bytes, power_cnt.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d7a5ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_out_adr1
</UL>

<P><STRONG><a name="[d7a5ac]"></a>uart_out_adr1</STRONG> (Thumb, 92 bytes, Stack size 128 bytes, power_cnt.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = uart_out_adr1
</UL>
<BR>[Calls]<UL><LI><a href="#[d7a5e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;putchar1
</UL>
<BR>[Called By]<UL><LI><a href="#[d7f034]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_summary_power
<LI><a href="#[d7f070]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_current_power
</UL>

<P><STRONG><a name="[d7a570]"></a>sleep_coding</STRONG> (Thumb, 88 bytes, Stack size 12 bytes, power_cnt.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = sleep_coding
</UL>
<BR>[Called By]<UL><LI><a href="#[d7f034]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_summary_power
<LI><a href="#[d7f070]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_current_power
</UL>

<P><STRONG><a name="[d7f070]"></a>read_current_power</STRONG> (Thumb, 210 bytes, Stack size 48 bytes, power_cnt.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = read_current_power &rArr; uart_out_adr1
</UL>
<BR>[Calls]<UL><LI><a href="#[d7a570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sleep_coding
<LI><a href="#[d7a5ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_out_adr1
<LI><a href="#[d7a624]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_cnt_crc
</UL>
<BR>[Called By]<UL><LI><a href="#[d7f250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[d7f034]"></a>read_summary_power</STRONG> (Thumb, 124 bytes, Stack size 48 bytes, power_cnt.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = read_summary_power &rArr; uart_out_adr1
</UL>
<BR>[Calls]<UL><LI><a href="#[d7a570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sleep_coding
<LI><a href="#[d7a5ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_out_adr1
<LI><a href="#[d7a624]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_cnt_crc
</UL>
<BR>[Called By]<UL><LI><a href="#[d7f250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[d7eff8]"></a>sleep_an</STRONG> (Thumb, 244 bytes, Stack size 68 bytes, power_cnt.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = sleep_an &rArr; power_cnt_crc
</UL>
<BR>[Calls]<UL><LI><a href="#[d7a624]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_cnt_crc
</UL>
<BR>[Called By]<UL><LI><a href="#[d7f250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[d7a174]"></a>__aeabi_memcpy</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[d7a138]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d7f430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vent_drv
</UL>

<P><STRONG><a name="[d7a0fc]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[d79aa8]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d79cc4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[d79d00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[d79a6c]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[d796ac]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[d79670]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[d79634]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[d7ad2c]"></a>NVIC_EnableIRQ</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, power_cnt.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d7f1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTInit
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
